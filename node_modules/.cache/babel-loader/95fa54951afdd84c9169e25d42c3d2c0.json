{"ast":null,"code":"import _defineProperty from \"/home/anahit/Desktop/warehouse-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/anahit/Desktop/warehouse-app/src/Components/Table/Table.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport MaterialTable from 'material-table';\nimport './Table.css';\nimport { Grid } from '@material-ui/core';\n\nclass Table extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      columns: [{\n        title: 'Name',\n        field: 'name'\n      }, {\n        title: 'Date',\n        field: 'date',\n        type: 'date',\n        customSort: (a, b) => new Date(a.date) - new Date(b.date),\n        render: data => this.toDate(data.date)\n      }, {\n        title: 'Priority',\n        field: 'priority',\n        lookup: {\n          1: '1',\n          2: '2',\n          3: '3',\n          4: '4',\n          5: '5'\n        },\n        customSort: (a, b) => a.priority - b.priority\n      }],\n      data: [{\n        name: 'Milk',\n        date: 'Sep 19 2010',\n        priority: 1\n      }, {\n        name: 'Coca-cola',\n        date: 'Sep 05 2011',\n        priority: 2\n      }]\n    };\n\n    this.toDate = string => new Date(string).toDateString();\n\n    this.priorities = {\n      1: '1',\n      2: '2',\n      3: '3',\n      4: '4',\n      5: '5'\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      spacing: 5,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(MaterialTable, {\n      title: \"Table\",\n      columns: this.state.columns,\n      data: this.state.data,\n      sorting: true,\n      editable: {\n        onRowAdd: newData => new Promise(resolve => {\n          setTimeout(() => {\n            resolve();\n            const data = [...this.state.data];\n            data.push(newData);\n            this.setState(_objectSpread({}, this.state, {\n              data\n            }));\n          }, 600);\n        }),\n        onRowUpdate: (newData, oldData) => new Promise(resolve => {\n          setTimeout(() => {\n            resolve();\n            const data = [...this.state.data];\n            data[data.indexOf(oldData)] = newData;\n            this.setState(_objectSpread({}, this.state, {\n              data\n            }));\n          }, 600);\n        }),\n        onRowDelete: oldData => new Promise(resolve => {\n          setTimeout(() => {\n            resolve();\n            const data = [...this.state.data];\n            data.splice(data.indexOf(oldData), 1);\n            this.setState(_objectSpread({}, this.state, {\n              data\n            }));\n          }, 600);\n        })\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Table;","map":{"version":3,"sources":["/home/anahit/Desktop/warehouse-app/src/Components/Table/Table.jsx"],"names":["React","Component","MaterialTable","Grid","Table","state","columns","title","field","type","customSort","a","b","Date","date","render","data","toDate","lookup","priority","name","string","toDateString","priorities","onRowAdd","newData","Promise","resolve","setTimeout","push","setState","onRowUpdate","oldData","indexOf","onRowDelete","splice"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport MaterialTable from 'material-table';\nimport './Table.css';\nimport {Grid} from '@material-ui/core';\n\nclass Table extends Component {\n    state = {\n        columns: [\n          {\n            title: 'Name',\n            field: 'name'\n          }, \n          {\n            title: 'Date',\n            field: 'date',\n            type: 'date',\n            customSort: (a, b) => new Date(a.date) - new Date(b.date),\n            render: (data) => this.toDate(data.date)\n          }, {\n            title: 'Priority',\n            field: 'priority',\n            lookup: {\n                1: '1',\n                2: '2',\n                3: '3',\n                4: '4',\n                5: '5'\n            },\n            customSort: (a, b) => a.priority - b.priority\n          }\n        ],\n        data: [\n          {\n            name: 'Milk',\n            date: 'Sep 19 2010',\n            priority: 1\n          }, {\n            name: 'Coca-cola',\n            date: 'Sep 05 2011',\n            priority: 2\n          }\n        ]\n    };\n\n    toDate = string => new Date(string).toDateString()\n\n    priorities = {\n        1: '1',\n        2: '2',\n        3: '3',\n        4: '4',\n        5: '5'\n    }\n\n    render() {\n        return (\n            <div id=\"table\">\n                <Grid container direction=\"row\" spacing={5}>\n                    <MaterialTable\n                        title=\"Table\"\n                        columns={this.state.columns}\n                        data={this.state.data}\n                        sorting\n                        editable={{\n                        onRowAdd: newData => new Promise(resolve => {\n                            setTimeout(() => {\n                                resolve();\n                                const data = [...this.state.data];\n                                data.push(newData);\n                                this.setState({\n                                  ...this.state,\n                                  data\n                                });\n                            }, 600);\n                        }),\n                        onRowUpdate: (newData, oldData) => new Promise(resolve => {\n                            setTimeout(() => {\n                                resolve();\n                                const data = [...this.state.data];\n                                data[data.indexOf(oldData)] = newData;\n                                this.setState({\n                                    ...this.state,\n                                     data\n                                });\n                            }, 600);\n                        }),\n                        onRowDelete: oldData => new Promise(resolve => {\n                            setTimeout(() => {\n                                resolve();\n                                const data = [...this.state.data];\n                                data.splice(data.indexOf(oldData), 1);\n                                this.setState({\n                                     ...this.state,\n                                     data\n                                });\n                            }, 600);\n                        })\n                    }}/>\n                </Grid>\n            </div>\n        );\n    }\n}\n\nexport default Table;"]},"metadata":{},"sourceType":"module"}