{"ast":null,"code":"var _jsxFileName = \"/home/anahit/Desktop/warehouse-app/src/Components/Home.jsx\";\nimport React, { Component } from 'react';\nimport { SwipeableDrawer, List, Divider, ListItem, ListItemIcon, ListItemText, IconButton, Box, Grid } from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggleDrawer = drawerOpen => event => {\n      // if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key //=== 'Shift')) {\n      // return;\n      //}\n      this.setState({\n        drawerOpen\n      });\n    };\n\n    this.handleListItemClick = name => new Promise(resolve => {\n      setTimeout(() => {\n        resolve();\n        this.props.history.push(name);\n      }, 200);\n    });\n\n    this.logOut = () => {\n      localStorage.setItem('isAuthed', false);\n      this.props.history.push('/');\n    };\n\n    this.sideList = () => React.createElement(\"div\", {\n      className: \"list\",\n      role: \"presentation\",\n      onClick: this.toggleDrawer(false),\n      onKeyDown: this.toggleDrawer(false),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(ListItem, {\n      button: true,\n      key: \"Table\",\n      onClick: () => this.props.history.push('/table'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(ListItemText, {\n      primary: \"Table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }))), React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(ListItem, {\n      button: true,\n      key: \"Log Out\",\n      onClick: this.logOut,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(ListItemText, {\n      primary: \"Log Out\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }))));\n\n    this.state = {\n      drawerOpen: false\n    };\n    this.component = this.props.component;\n  }\n\n  componentWillMount() {\n    const isAuthed = localStorage.getItem('isAuthed');\n\n    if (!isAuthed || isAuthed === 'false') {\n      this.props.history.push('/');\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(Box, {\n      ml: 2,\n      mt: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      color: \"default\",\n      \"aria-label\": \"Open drawer\",\n      onClick: this.toggleDrawer(true),\n      edge: \"start\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(MenuIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }))), this.component ? this.component : null), React.createElement(SwipeableDrawer, {\n      open: this.state.drawerOpen,\n      onClose: this.toggleDrawer(false),\n      onOpen: this.toggleDrawer(true),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, this.sideList('left')));\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["/home/anahit/Desktop/warehouse-app/src/Components/Home.jsx"],"names":["React","Component","SwipeableDrawer","List","Divider","ListItem","ListItemIcon","ListItemText","IconButton","Box","Grid","MenuIcon","Home","constructor","props","toggleDrawer","drawerOpen","event","setState","handleListItemClick","name","Promise","resolve","setTimeout","history","push","logOut","localStorage","setItem","sideList","state","component","componentWillMount","isAuthed","getItem","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SACEC,eADF,EAEEC,IAFF,EAGEC,OAHF,EAIEC,QAJF,EAKEC,YALF,EAMEC,YANF,EAOEC,UAPF,EAQEC,GARF,EASEC,IATF,QAUO,mBAVP;AAYA,OAAOC,QAAP,MAAqB,yBAArB;;AAEA,MAAMC,IAAN,SAAmBX,SAAnB,CAA6B;AAC3BY,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAQnBC,YARmB,GAQHC,UAAD,IAAgBC,KAAK,IAAI;AACvC;AACE;AACD;AAEA,WAAKC,QAAL,CAAc;AAACF,QAAAA;AAAD,OAAd;AACD,KAdkB;;AAAA,SAgBnBG,mBAhBmB,GAgBIC,IAAD,IAAU,IAAIC,OAAJ,CAAYC,OAAO,IAAI;AACrDC,MAAAA,UAAU,CAAC,MAAM;AACfD,QAAAA,OAAO;AACP,aAAKR,KAAL,CAAWU,OAAX,CAAmBC,IAAnB,CAAwBL,IAAxB;AACD,OAHS,EAGP,GAHO,CAAV;AAID,KAL+B,CAhBb;;AAAA,SAuBnBM,MAvBmB,GAuBV,MAAM;AACbC,MAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiC,KAAjC;AACA,WAAKd,KAAL,CAAWU,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AACD,KA1BkB;;AAAA,SAsCnBI,QAtCmB,GAsCR,MACT;AACE,MAAA,SAAS,EAAC,MADZ;AAEE,MAAA,IAAI,EAAC,cAFP;AAGE,MAAA,OAAO,EAAE,KAAKd,YAAL,CAAkB,KAAlB,CAHX;AAIE,MAAA,SAAS,EAAE,KAAKA,YAAL,CAAkB,KAAlB,CAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,EAME,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD;AAAU,MAAA,MAAM,MAAhB;AAAiB,MAAA,GAAG,EAAC,OAArB;AAA6B,MAAA,OAAO,EAAE,MAAM,KAAKD,KAAL,CAAWU,OAAX,CAAmBC,IAAnB,CAAwB,QAAxB,CAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,YAAD;AAAc,MAAA,OAAO,EAAC,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CANF,EAWE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXF,EAYE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD;AAAU,MAAA,MAAM,MAAhB;AAAiB,MAAA,GAAG,EAAC,SAArB;AAA+B,MAAA,OAAO,EAAE,KAAKC,MAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,YAAD;AAAc,MAAA,OAAO,EAAC,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CAZF,CAvCiB;;AAEjB,SAAKI,KAAL,GAAa;AACXd,MAAAA,UAAU,EAAE;AADD,KAAb;AAGA,SAAKe,SAAL,GAAiB,KAAKjB,KAAL,CAAWiB,SAA5B;AACD;;AAsBDC,EAAAA,kBAAkB,GAAG;AACnB,UAAMC,QAAQ,GAAGN,YAAY,CAACO,OAAb,CAAqB,UAArB,CAAjB;;AACA,QAAI,CAACD,QAAD,IAAaA,QAAQ,KAAK,OAA9B,EAAuC;AACrC,WACGnB,KADH,CAEGU,OAFH,CAGGC,IAHH,CAGQ,GAHR;AAID;AACF;;AAwBDU,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,SAAS,EAAC,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAY,MAAA,EAAE,EAAE,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AACE,MAAA,KAAK,EAAC,SADR;AAEE,oBAAW,aAFb;AAGE,MAAA,OAAO,EAAE,KAAKpB,YAAL,CAAkB,IAAlB,CAHX;AAIE,MAAA,IAAI,EAAC,OAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CADF,CADF,EAUG,KAAKgB,SAAL,GAAiB,KAAKA,SAAtB,GAAkC,IAVrC,CADF,EAcE,oBAAC,eAAD;AACE,MAAA,IAAI,EAAE,KAAKD,KAAL,CAAWd,UADnB;AAEE,MAAA,OAAO,EAAE,KAAKD,YAAL,CAAkB,KAAlB,CAFX;AAGE,MAAA,MAAM,EAAE,KAAKA,YAAL,CAAkB,IAAlB,CAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIG,KAAKc,QAAL,CAAc,MAAd,CAJH,CAdF,CADF;AAuBD;;AArF0B;;AAwF7B,eAAejB,IAAf","sourcesContent":["import React, {Component} from 'react';\nimport {\n  SwipeableDrawer,\n  List,\n  Divider,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  IconButton,\n  Box,\n  Grid\n} from '@material-ui/core';\n\nimport MenuIcon from '@material-ui/icons/Menu';\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      drawerOpen: false\n    }\n    this.component = this.props.component;\n  }\n\n  toggleDrawer = (drawerOpen) => event => {\n   // if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key //=== 'Shift')) {\n     // return;\n    //}\n\n    this.setState({drawerOpen});\n  };\n\n  handleListItemClick = (name) => new Promise(resolve => {\n    setTimeout(() => {\n      resolve();\n      this.props.history.push(name);\n    }, 200)\n  });\n\n  logOut = () => {\n    localStorage.setItem('isAuthed', false);\n    this.props.history.push('/');\n  }\n\n  componentWillMount() {\n    const isAuthed = localStorage.getItem('isAuthed');\n    if (!isAuthed || isAuthed === 'false') {\n      this\n        .props\n        .history\n        .push('/')\n    }\n  }\n\n  sideList = () => (\n    <div\n      className=\"list\"\n      role=\"presentation\"\n      onClick={this.toggleDrawer(false)}\n      onKeyDown={this.toggleDrawer(false)}>\n      <Divider/>\n      <List>\n        <ListItem button key=\"Table\" onClick={() => this.props.history.push('/table')}>\n          <ListItemText primary=\"Table\"/>\n        </ListItem>\n      </List>\n      <Divider/>\n      <List>\n        <ListItem button key=\"Log Out\" onClick={this.logOut}>\n          <ListItemText primary=\"Log Out\"/>\n        </ListItem>\n\n      </List>\n    </div>\n  );\n\n  render() {\n    return (\n      <div>\n        <Grid container direction=\"row\">\n          <Box ml={2} mt={1}>\n            <IconButton\n              color=\"default\"\n              aria-label=\"Open drawer\"\n              onClick={this.toggleDrawer(true)}\n              edge=\"start\">\n              <MenuIcon/>\n            </IconButton>\n          </Box>\n          {this.component ? this.component : null}\n        </Grid>\n\n        <SwipeableDrawer\n          open={this.state.drawerOpen}\n          onClose={this.toggleDrawer(false)}\n          onOpen={this.toggleDrawer(true)}>\n          {this.sideList('left')}\n        </SwipeableDrawer>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}