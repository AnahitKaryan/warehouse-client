{"ast":null,"code":"import _defineProperty from \"/home/anahit/Desktop/warehouse-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/anahit/Desktop/warehouse-app/src/Components/Table/Table.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport MaterialTable from 'material-table';\nimport './Table.css';\nimport Chart from 'react-google-charts';\nimport { Grid } from '@material-ui/core';\n\nclass Table extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      columns: [{\n        title: 'Name',\n        field: 'name'\n      }, {\n        title: 'Date',\n        field: 'date',\n        type: 'date',\n        customSort: (a, b) => new Date(a.date) - new Date(b.date),\n        render: data => this.toDate(data.date)\n      }, {\n        title: 'Priority',\n        field: 'priority',\n        lookup: {\n          1: '1',\n          2: '2',\n          3: '3',\n          4: '4',\n          5: '5'\n        },\n        customSort: (a, b) => a.priority - b.priority\n      }],\n      data: [{\n        name: 'Do something',\n        date: '10.02.2004',\n        priority: 1\n      }, {\n        name: 'Become a billionaire',\n        date: '02.09.2024',\n        priority: 2\n      }]\n    };\n\n    this.toDate = string => new Date(string).toDateString();\n\n    this.priorities = {\n      1: '1',\n      2: '2',\n      3: '3',\n      4: '4',\n      5: '5'\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      spacing: 5,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(MaterialTable, {\n      title: \"Table\",\n      columns: this.state.columns,\n      data: this.state.data,\n      sorting: true,\n      editable: {\n        onRowAdd: newData => {\n          const data = [...this.state.data];\n          data.push(newData);\n          this.setState(_objectSpread({}, this.state, {\n            data\n          }));\n        },\n        onRowUpdate: (newData, oldData) => {\n          const data = [...this.state.data];\n          data[data.indexOf(oldData)] = newData;\n          this.setState(_objectSpread({}, this.state, {\n            data\n          }));\n        },\n        onRowDelete: oldData => {\n          const data = [...this.state.data];\n          data.splice(data.indexOf(oldData), 1);\n          this.setState(_objectSpread({}, this.state, {\n            data\n          }));\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: \"chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(Chart, {\n      chartType: \"AreaChart\",\n      loader: React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"Loading Chart\"),\n      data: [['Date', 'Priority']].concat(this.state.data.sort((a, b) => new Date(a.date) - new Date(b.date)).map((item, index) => [{\n        v: new Date(item.date),\n        f: this.toDate(item.date)\n      }, {\n        v: item.priority,\n        f: this.priorities[item.priority]\n      }])),\n      options: {\n        title: 'Table chart',\n        hAxis: {\n          title: 'Year',\n          titleTextStyle: {\n            color: '#333'\n          }\n        },\n        vAxis: {\n          minValue: 0,\n          maxValue: 2\n        },\n        chartArea: {\n          width: '50%',\n          height: '70%'\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default Table;","map":{"version":3,"sources":["/home/anahit/Desktop/warehouse-app/src/Components/Table/Table.jsx"],"names":["React","Component","MaterialTable","Chart","Grid","Table","state","columns","title","field","type","customSort","a","b","Date","date","render","data","toDate","lookup","priority","name","string","toDateString","priorities","onRowAdd","newData","push","setState","onRowUpdate","oldData","indexOf","onRowDelete","splice","concat","sort","map","item","index","v","f","hAxis","titleTextStyle","color","vAxis","minValue","maxValue","chartArea","width","height"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport MaterialTable from 'material-table';\nimport './Table.css';\nimport Chart from 'react-google-charts';\nimport {Grid} from '@material-ui/core';\n\nclass Table extends Component {\n    state = {\n        columns: [\n          {\n            title: 'Name',\n            field: 'name'\n          }, {\n            title: 'Date',\n            field: 'date',\n            type: 'date',\n            customSort: (a, b) => new Date(a.date) - new Date(b.date),\n            render: (data) => this.toDate(data.date)\n          }, {\n            title: 'Priority',\n            field: 'priority',\n            lookup: {\n                1: '1',\n                2: '2',\n                3: '3',\n                4: '4',\n                5: '5'\n            },\n            customSort: (a, b) => a.priority - b.priority\n          }\n        ],\n        data: [\n          {\n            name: 'Do something',\n            date: '10.02.2004',\n            priority: 1\n          }, {\n            name: 'Become a billionaire',\n            date: '02.09.2024',\n            priority: 2\n          }\n        ]\n    };\n\n    toDate = string => new Date(string).toDateString()\n\n    priorities = {\n        1: '1',\n        2: '2',\n        3: '3',\n        4: '4',\n        5: '5'\n    }\n\n    render() {\n        return (\n            <div id=\"table\">\n                <Grid container direction=\"row\" spacing={5}>\n                 <MaterialTable\n                    title=\"Table\"\n                    columns={this.state.columns}\n                    data={this.state.data}\n                    sorting\n                    editable={{\n                    onRowAdd: newData => {\n                        const data = [...this.state.data];\n                        data.push(newData);\n                        this.setState({\n                          ...this.state,\n                          data\n                        });\n                    },\n                    onRowUpdate: (newData, oldData) =>  {\n                        const data = [...this.state.data];\n                        data[data.indexOf(oldData)] = newData;\n                        this.setState({\n                          ...this.state,\n                          data\n                        });\n                    },\n                    onRowDelete: oldData => {\n                        const data = [...this.state.data];\n                        data.splice(data.indexOf(oldData), 1);\n                        this.setState({\n                          ...this.state,\n                          data\n                        });\n                    }\n              }}/>\n              <div id=\"chart\">\n                <Chart\n                  chartType=\"AreaChart\"\n                  loader={(\n                  <div>Loading Chart</div>\n                )}\n                  data={[\n                  ['Date', 'Priority']\n                ].concat(this.state.data.sort((a, b) => new Date(a.date) - new Date(b.date)).map((item, index) => [\n                  {v: new Date(item.date), f: this.toDate(item.date)}, {\n                    v: item.priority,\n                    f: this.priorities[item.priority]\n                  }\n                ]))}\n                  options={{\n                  title: 'Table chart',\n                  hAxis: {\n                    title: 'Year',\n                    titleTextStyle: {\n                      color: '#333'\n                    }\n                  },\n                  vAxis: {\n                    minValue: 0,\n                    maxValue: 2\n                  },\n                  chartArea: {\n                    width: '50%',\n                    height: '70%'\n                  }\n                }}/>\n              </div>\n            </Grid>\n          </div>\n        );\n    }\n}\n\nexport default Table;"]},"metadata":{},"sourceType":"module"}