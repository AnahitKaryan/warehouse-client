{"ast":null,"code":"var _jsxFileName = \"/home/anahit/Desktop/warehouse-app/src/Components/Register.jsx\";\nimport React, { Component } from 'react';\nimport { Container, Col, Row, Form, FormGroup, Label, Input, Button } from 'reactstrap';\n\nclass Register extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: '',\n      surname: '',\n      birthdate: '',\n      gemus: 'female',\n      email: '',\n      password: '',\n      errors: {\n        name: '',\n        surname: '',\n        birthdate: '',\n        gemus: '',\n        email: '',\n        password: ''\n      },\n      valid: true\n    };\n\n    this.checkValidation = event => {\n      const _event$target = event.target,\n            name = _event$target.name,\n            value = _event$target.value;\n      let errors = this.state.errors;\n      const validEmailRegex = RegExp(/^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i);\n\n      switch (name) {\n        case 'name':\n          let valid = value.length < 1 || value[0] >= 'A' && value[0] <= 'Z';\n          errors.name = !valid ? 'The name must contain at least one character and begin with a capital letter!' : '';\n          break;\n\n        case 'surname':\n          let validSurname = value.length < 1 || value[0] >= 'A' && value[0] <= 'Z';\n          errors.surname = !validSurname ? 'The surname must contain at least one character and begin with a capital letter!' : '';\n          break;\n\n        case 'birthdate':\n          errors.birthdate = value ? '' : 'Birthdate is requared value!';\n          break;\n\n        case 'gemus':\n          errors.gemus = value ? '' : 'Gemus is requared value!';\n          break;\n\n        case 'email':\n          errors.email = validEmailRegex.test(value) ? '' : 'Email is not valid!';\n          break;\n\n        case 'password':\n          errors.password = value.length < 5 ? 'Password must be 5 characters long!' : '';\n          break;\n\n        default:\n          break;\n      }\n\n      this.setState({\n        errors,\n        [name]: value\n      }, () => {\n        console.log(errors);\n      });\n      let valid = this.state.valid;\n      Object.values(errors).forEach( // if we have an error string set valid to false\n      val => val.length > 0 && this.setState({\n        valid: false\n      }));\n    };\n\n    this.inputsChange = e => {\n      this.checkValidation(e);\n      const name = e.target.name;\n      const value = e.target.value;\n      console.log('kanchvel e inoputChange' + name + value);\n\n      switch (name) {\n        case 'email':\n          this.setState({\n            email: value\n          });\n          break;\n\n        case 'password':\n          this.setState({\n            password: value\n          });\n          break;\n\n        case 'name':\n          this.setState({\n            name: value\n          });\n          break;\n\n        case 'surname':\n          this.setState({\n            surname: value\n          });\n          break;\n\n        case 'birthdate':\n          this.setState({\n            birthdate: value\n          });\n          break;\n\n        case 'gemus':\n          this.setState({\n            gemus: value\n          });\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault(); // const newUser = Object.assign(this.state);\n\n      if (this.state.errors) {\n        console.info('Valid Form');\n        const newUser = {\n          \"name\": this.state.name,\n          \"surname\": this.state.surname,\n          \"birthdate\": this.state.birthdate,\n          \"gemus\": this.state.gemus,\n          \"email\": this.state.email,\n          \"password\": this.state.password\n        };\n        fetch('http://localhost:8081/signup', {\n          method: 'POST',\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(newUser)\n        }).then(res => {\n          if (res.status !== 200) {\n            console.log('Looks like there was a problem. Status Code: ' + res.status);\n            return;\n          }\n\n          this.props.history.push('/');\n        }).catch(function (err) {\n          console.log('Fetch Error :-S', err);\n        });\n      } else {\n        console.error('Invalid Form');\n      }\n    };\n  }\n\n  render() {\n    const errors = this.state.errors;\n    return React.createElement(Container, {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, \"Register\"), React.createElement(Form, {\n      className: \"form\",\n      noValidate: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, \"Email\"), React.createElement(Input, {\n      placeholder: \"Enter email\",\n      autoCapitalize: false,\n      name: \"email\",\n      onChange: this.inputsChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }), errors.email.length > 0 && React.createElement(\"span\", {\n      className: \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, errors.email)), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"examplePassword\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, \"Password\"), React.createElement(Input, {\n      type: \"password\",\n      placeholder: \"Enter password\",\n      name: \"password\",\n      onChange: this.inputsChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }), errors.password.length > 0 && React.createElement(\"span\", {\n      className: \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, errors.password)), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, \"Name\"), React.createElement(Input, {\n      placeholder: \"Enter name\",\n      autoCapitalize: false,\n      name: \"name\",\n      onChange: this.inputsChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }), errors.name.length > 0 && React.createElement(\"span\", {\n      className: \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, errors.name)), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, \"Surname\"), React.createElement(Input, {\n      type: \"text\",\n      placeholder: \"Enter surname\",\n      autoCapitalize: false,\n      name: \"surname\",\n      onChange: this.inputsChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }), errors.surname.length > 0 && React.createElement(\"span\", {\n      className: \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, errors.surname)), React.createElement(Row, {\n      form: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, React.createElement(\"legend\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, \"Birthday\"), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: \"date\",\n      name: \"birthdate\",\n      id: \"exampleDate\",\n      onChange: this.inputsChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }), errors.birthdate.length > 0 && React.createElement(\"span\", {\n      className: \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, errors.birthdate)))), React.createElement(FormGroup, {\n      tag: \"fieldset\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, React.createElement(\"legend\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, \"Gemus\"), React.createElement(FormGroup, {\n      check: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, React.createElement(Label, {\n      check: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: \"radio\",\n      name: \"radio\",\n      onChange: this.inputsChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }), \"Male\")), React.createElement(FormGroup, {\n      check: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, React.createElement(Label, {\n      check: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: \"radio\",\n      name: \"radio\",\n      onChange: this.inputsChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }), \"Female\")), errors.gemus.length > 0 && React.createElement(\"span\", {\n      className: \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, errors.gemus)), React.createElement(Button, {\n      type: \"submit\",\n      disabled: this.state.valid,\n      onClick: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, \"Register\"), React.createElement(Button, {\n      onClick: () => {\n        this.props.history.push('/');\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, \"Cancell\")));\n  }\n\n}\n\nexport default Register;\n{\n  /* avelacnel radioi arjeqn el,Cancell sexmelis gnal login page*/\n}","map":{"version":3,"sources":["/home/anahit/Desktop/warehouse-app/src/Components/Register.jsx"],"names":["React","Component","Container","Col","Row","Form","FormGroup","Label","Input","Button","Register","state","name","surname","birthdate","gemus","email","password","errors","valid","checkValidation","event","target","value","validEmailRegex","RegExp","length","validSurname","test","setState","console","log","Object","values","forEach","val","inputsChange","e","handleSubmit","preventDefault","info","newUser","fetch","method","headers","body","JSON","stringify","then","res","status","props","history","push","catch","err","error","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n  Container, Col, Row, Form,\n  FormGroup, Label, Input,\n  Button,\n} from 'reactstrap';\n\n\nclass Register extends Component {\n  state = {\n    name: '',\n    surname: '',\n    birthdate: '',\n    gemus: 'female',\n    email: '',\n    password: '',\n    errors: {\n      name: '',\n      surname: '',\n      birthdate: '',\n      gemus: '',\n      email: '',\n      password: ''\n    },\n    valid: true\n  }\n\n\n  checkValidation = (event) => {\n    const { name, value } = event.target;\n    let errors = this.state.errors;\n    const validEmailRegex =  RegExp(/^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i);\n\n    switch (name) {\n      case 'name': \n          let valid = value.length < 1 || (value[0] >= 'A' && value[0] <= 'Z');\n          errors.name = \n          !valid ? 'The name must contain at least one character and begin with a capital letter!'\n          : '';\n        break;\n      case 'surname': \n          let validSurname = value.length < 1 || (value[0] >= 'A' && value[0] <= 'Z');\n          errors.surname = \n          !validSurname ? 'The surname must contain at least one character and begin with a capital letter!'\n            : '';\n        break;\n      case 'birthdate': \n        errors.birthdate = value ? '' : 'Birthdate is requared value!';\n        break;\n       case 'gemus': \n        errors.gemus = value ? '' : 'Gemus is requared value!';\n        break;\n      case 'email': \n        errors.email = \n          validEmailRegex.test(value)\n            ? ''\n            : 'Email is not valid!';\n        break;\n      case 'password': \n        errors.password = \n          value.length < 5\n            ? 'Password must be 5 characters long!'\n            : '';\n        break;\n      default:\n        break;\n    }\n\n    this.setState({errors, [name]: value}, ()=> {\n        console.log(errors)\n    })\n    let valid = this.state.valid;\n    Object.values(errors).forEach(\n      // if we have an error string set valid to false\n      (val) => val.length > 0 && (this.setState({valid: false}))\n    );\n\n  }\n\n  inputsChange = (e) => {\n    this.checkValidation(e);\n    const name = e.target.name;\n    const value = e.target.value;\n    console.log('kanchvel e inoputChange' + name + value)\n    switch(name) {\n  \n      case 'email':\n        this.setState({email: value});\n        break;\n      case 'password':\n        this.setState({password: value});\n        break;\n      case 'name':\n        this.setState({name: value});\n        break;\n      case 'surname':\n        this.setState({surname: value});\n        break;\n      case 'birthdate':\n        this.setState({birthdate: value});\n        break;\n      case 'gemus':\n        this.setState({gemus: value }); \n        break;\n      default:\n        break;\n    }\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n    // const newUser = Object.assign(this.state);\n    if(this.state.errors) {\n      console.info('Valid Form')\n      const newUser = {\n        \"name\": this.state.name,\n        \"surname\": this.state.surname,\n        \"birthdate\": this.state.birthdate,\n        \"gemus\": this.state.gemus,\n        \"email\": this.state.email,\n        \"password\": this.state.password       \n      }\n      fetch('http://localhost:8081/signup', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n        },\n        body:  JSON.stringify( newUser)\n        }).then((res) =>  {\n          if (res.status !== 200) { \n            console.log('Looks like there was a problem. Status Code: ' +  res.status);  \n            return;  \n          }\n          this.props.history.push('/')\n        }).catch(function(err) {  \n          console.log('Fetch Error :-S', err);  \n        });\n      } else {\n        console.error('Invalid Form')\n      }                  \n  }\n\n  render() {\n    const {errors} = this.state;\n    return (\n      <Container className=\"App\">\n        <h2>Register</h2>\n        <Form className=\"form\" noValidate>\n            <FormGroup>\n              <Label>Email</Label>\n              <Input\n                placeholder=\"Enter email\"\n                autoCapitalize={false}\n                name=\"email\"\n                onChange={this.inputsChange}\n                required\n              />\n             {errors.email.length > 0 && \n             <span className='error'>{errors.email}</span>}\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"examplePassword\">Password</Label>\n              <Input\n                type=\"password\"\n                placeholder=\"Enter password\"\n                name=\"password\"\n                onChange={this.inputsChange}\n                required\n              />\n              {errors.password.length > 0 && \n              <span className='error'>{errors.password}</span>}\n\n            </FormGroup>\n            <FormGroup>\n              <Label>Name</Label>\n              <Input\n                placeholder=\"Enter name\"\n                autoCapitalize={false}\n                name=\"name\"\n                onChange={this.inputsChange}\n                required\n              />\n               {errors.name.length > 0 && \n              <span className='error'>{errors.name}</span>}\n            </FormGroup>\n            <FormGroup>\n              <Label>Surname</Label>\n              <Input\n                type=\"text\"\n                placeholder=\"Enter surname\"\n                autoCapitalize={false}\n                name=\"surname\"\n                onChange={this.inputsChange}\n                required\n              />\n               {errors.surname.length > 0 && \n              <span className='error'>{errors.surname}</span>}\n            </FormGroup>\n            <Row form>\n              <legend>Birthday</legend>\n              <Col>\n                <FormGroup>\n                  <Input\n                   type=\"date\"\n                   name=\"birthdate\"\n                   id=\"exampleDate\"\n                   onChange={this.inputsChange}\n                 />\n                 {errors.birthdate.length > 0 && \n                 <span className='error'>{errors.birthdate}</span>}\n\n               </FormGroup>\n             </Col>\n           </Row>\n           <FormGroup tag=\"fieldset\">\n              <legend>Gemus</legend>\n           <FormGroup check>\n              <Label check>\n                <Input type=\"radio\" name=\"radio\" onChange={this.inputsChange} required />\n                   Male\n              </Label>\n          </FormGroup>\n          <FormGroup check>\n              <Label check>\n                <Input type=\"radio\" name=\"radio\" onChange={this.inputsChange}\n                required/>\n                  Female\n              </Label>\n          </FormGroup>\n          {errors.gemus.length > 0 && \n          <span className='error'>{errors.gemus}</span>}\n\n          </FormGroup>\n          <Button type=\"submit\" disabled={this.state.valid} onClick={this.handleSubmit}>\n            Register\n          </Button>\n          <Button  onClick={() => {this.props.history.push('/')}}>\n            Cancell\n          </Button>\n        </Form>\n      </Container>\n    );\n  }\n}\nexport default Register;\n\n{/* avelacnel radioi arjeqn el,Cancell sexmelis gnal login page*/}\n"]},"metadata":{},"sourceType":"module"}