{"ast":null,"code":"var _jsxFileName = \"/home/anahit/Desktop/warehouse-app/src/Components/Register.jsx\";\nimport React, { Component } from 'react';\nimport { Container, Col, Row, Form, FormGroup, Label, Input, Button } from 'reactstrap';\n\nclass Register extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: '',\n      surname: '',\n      birthdate: '',\n      gemus: 'female',\n      email: '',\n      password: '',\n      errors: {\n        name: '',\n        surname: '',\n        birthdate: '',\n        gemus: '',\n        email: '',\n        password: ''\n      }\n    };\n\n    this.formValidetion = event => {\n      const _event$target = event.target,\n            name = _event$target.name,\n            value = _event$target.value;\n      let errors = this.state.errors;\n\n      switch (name) {\n        case 'name':\n          const valid = value.length < 1 || value[0] >= 'A' && value[0] <= 'Z';\n          errors.name = valid ? 'The name must contain at least one character and begin with a capital letter!' : '';\n          break;\n\n        case 'surname':\n          const validSurname = value.length < 1 || value[0] >= 'A' && value[0] <= 'Z';\n          errors.surname = validSurname ? 'The surname must contain at least one character and begin with a capital letter!' : '';\n          break;\n\n        case 'birthdate':\n          errors.birthdate = value ? '' : 'Birthdate is requared value!';\n          break;\n\n        case 'gemus':\n          errors.gemus = value ? '' : 'Gemus is requared value!';\n          break;\n\n        case 'email':\n          errors.email = validEmailRegex.test(value) ? '' : 'Email is not valid!';\n          break;\n\n        case 'password':\n          errors.password = value.length < 5 ? 'Password must be 5 characters long!' : '';\n          break;\n\n        default:\n          break;\n      }\n\n      this.setState({\n        errors,\n        [name]: value\n      }, () => {\n        console.log(errors);\n      });\n    };\n\n    this.inputsChange = e => {\n      const name = e.target.name;\n      const value = e.target.value;\n      console.log('kanchvel e inoputChange' + name + value);\n\n      switch (name) {\n        case 'email':\n          this.setState({\n            email: value\n          });\n          break;\n\n        case 'password':\n          this.setState({\n            password: value\n          });\n          break;\n\n        case 'name':\n          this.setState({\n            name: value\n          });\n          break;\n\n        case 'surname':\n          this.setState({\n            surname: value\n          });\n          break;\n\n        case 'birthdate':\n          this.setState({\n            birthdate: value\n          });\n          break;\n\n        case 'gemus':\n          this.setState({\n            gemus: value\n          });\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault(); // const newUser = Object.assign(this.state);\n\n      const newUser = {\n        \"name\": this.state.name,\n        \"surname\": this.state.surname,\n        \"birthdate\": this.state.birthdate,\n        \"gemus\": this.state.gemus,\n        \"email\": this.state.email,\n        \"password\": this.state.password\n      };\n      fetch('http://localhost:8081/signup', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newUser)\n      }).then(res => {\n        if (res.status !== 200) {\n          console.log('Looks like there was a problem. Status Code: ' + res.status);\n          return;\n        }\n\n        this.props.history.push('/');\n      }).catch(function (err) {\n        console.log('Fetch Error :-S', err);\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(Container, {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"Register\"), React.createElement(Form, {\n      className: \"form\",\n      noValidate: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"Email\"), React.createElement(Input, {\n      placeholder: \"Enter email\",\n      autoCapitalize: false,\n      name: \"email\",\n      onChange: this.inputsChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"examplePassword\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \"Password\"), React.createElement(Input, {\n      type: \"password\",\n      placeholder: \"Enter password\",\n      name: \"password\",\n      onChange: this.inputsChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, \"Name\"), React.createElement(Input, {\n      placeholder: \"Enter name\",\n      autoCapitalize: false,\n      name: \"name\",\n      onChange: this.inputsChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, \"Surname\"), React.createElement(Input, {\n      type: \"text\",\n      placeholder: \"Enter surname\",\n      autoCapitalize: false,\n      name: \"surname\",\n      onChange: this.inputsChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    })), React.createElement(Row, {\n      form: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(\"legend\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, \"Birthday\"), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: \"date\",\n      name: \"birthdate\",\n      id: \"exampleDate\",\n      onChange: this.inputsChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    })))), React.createElement(FormGroup, {\n      tag: \"fieldset\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, React.createElement(\"legend\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, \"Genus\"), React.createElement(FormGroup, {\n      check: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, React.createElement(Label, {\n      check: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: \"radio\",\n      name: \"radio\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }), \"Male\")), React.createElement(FormGroup, {\n      check: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, React.createElement(Label, {\n      check: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: \"radio\",\n      name: \"radio\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }), \"Female\"))), React.createElement(Button, {\n      type: \"submit\",\n      onClick: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, \"Register\"), React.createElement(Button, {\n      onClick: () => {\n        this.props.history.push('/');\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, \"Cancell\")));\n  }\n\n}\n\nexport default Register;\n{\n  /* avelacnel radioi arjeqn el,Cancell sexmelis gnal login page*/\n}","map":{"version":3,"sources":["/home/anahit/Desktop/warehouse-app/src/Components/Register.jsx"],"names":["React","Component","Container","Col","Row","Form","FormGroup","Label","Input","Button","Register","state","name","surname","birthdate","gemus","email","password","errors","formValidetion","event","target","value","valid","length","validSurname","validEmailRegex","test","setState","console","log","inputsChange","e","handleSubmit","preventDefault","newUser","fetch","method","headers","body","JSON","stringify","then","res","status","props","history","push","catch","err","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n  Container, Col, Row, Form,\n  FormGroup, Label, Input,\n  Button,\n} from 'reactstrap';\n\n\nclass Register extends Component {\n  state = {\n    name: '',\n    surname: '',\n    birthdate: '',\n    gemus: 'female',\n    email: '',\n    password: '',\n    errors: {\n      name: '',\n      surname: '',\n      birthdate: '',\n      gemus: '',\n      email: '',\n      password: ''\n    }\n  }\n\n  formValidetion = (event) => {\n    const { name, value } = event.target;\n    let errors = this.state.errors;\n\n    switch (name) {\n      case 'name': \n          const valid = value.length < 1 || (value[0] >= 'A' && value[0] <= 'Z');\n          errors.name = \n          valid ? 'The name must contain at least one character and begin with a capital letter!'\n          : '';\n        break;\n      case 'surname': \n          const validSurname = value.length < 1 || (value[0] >= 'A' && value[0] <= 'Z');\n          errors.surname = \n          validSurname ? 'The surname must contain at least one character and begin with a capital letter!'\n            : '';\n        break;\n      case 'birthdate': \n        errors.birthdate = value ? '' : 'Birthdate is requared value!';\n        break;\n       case 'gemus': \n        errors.gemus = value ? '' : 'Gemus is requared value!';\n        break;\n      case 'email': \n        errors.email = \n          validEmailRegex.test(value)\n            ? ''\n            : 'Email is not valid!';\n        break;\n      case 'password': \n        errors.password = \n          value.length < 5\n            ? 'Password must be 5 characters long!'\n            : '';\n        break;\n      default:\n        break;\n    }\n\n    this.setState({errors, [name]: value}, ()=> {\n        console.log(errors)\n    })\n\n  }\n  inputsChange = (e) => {\n    const name = e.target.name;\n    const value = e.target.value;\n    console.log('kanchvel e inoputChange' + name + value)\n    switch(name) {\n  \n      case 'email':\n        this.setState({email: value});\n        break;\n      case 'password':\n        this.setState({password: value});\n        break;\n      case 'name':\n        this.setState({name: value});\n        break;\n      case 'surname':\n        this.setState({surname: value});\n        break;\n      case 'birthdate':\n        this.setState({birthdate: value});\n        break;\n      case 'gemus':\n        this.setState({gemus: value }); \n        break;\n      default:\n        break;\n    }\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n   // const newUser = Object.assign(this.state);\n    const newUser = {\n          \"name\": this.state.name,\n          \"surname\": this.state.surname,\n          \"birthdate\": this.state.birthdate,\n          \"gemus\": this.state.gemus,\n          \"email\": this.state.email,\n          \"password\": this.state.password       \n     }\n    fetch('http://localhost:8081/signup', {\n                method: 'POST',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json',\n                },\n                body:  JSON.stringify( newUser)\n                }).then((res) =>  {\n                  if (res.status !== 200) { \n                    console.log('Looks like there was a problem. Status Code: ' +  res.status);  \n                    return;  \n                  }\n                  this.props.history.push('/')\n                }).catch(function(err) {  \n                  console.log('Fetch Error :-S', err);  \n                });\n                      \n  }\n\n  render() {\n    return (\n      <Container className=\"App\">\n        <h2>Register</h2>\n        <Form className=\"form\" noValidate>\n            <FormGroup>\n              <Label>Email</Label>\n              <Input\n                placeholder=\"Enter email\"\n                autoCapitalize={false}\n                name=\"email\"\n                onChange={this.inputsChange}\n                required\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"examplePassword\">Password</Label>\n              <Input\n                type=\"password\"\n                placeholder=\"Enter password\"\n                name=\"password\"\n                onChange={this.inputsChange}\n                required\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label>Name</Label>\n              <Input\n                placeholder=\"Enter name\"\n                autoCapitalize={false}\n                name=\"name\"\n                onChange={this.inputsChange}\n                required\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label>Surname</Label>\n              <Input\n                type=\"text\"\n                placeholder=\"Enter surname\"\n                autoCapitalize={false}\n                name=\"surname\"\n                onChange={this.inputsChange}\n                required\n              />\n            </FormGroup>\n            <Row form>\n              <legend>Birthday</legend>\n              <Col>\n                <FormGroup>\n                  <Input\n                   type=\"date\"\n                   name=\"birthdate\"\n                   id=\"exampleDate\"\n                   onChange={this.inputsChange}\n                 />\n               </FormGroup>\n             </Col>\n           </Row>\n           <FormGroup tag=\"fieldset\">\n              <legend>Genus</legend>\n           <FormGroup check>\n              <Label check>\n                <Input type=\"radio\" name=\"radio\"/>\n                   Male\n              </Label>\n          </FormGroup>\n          <FormGroup check>\n              <Label check>\n                <Input type=\"radio\" name=\"radio\"/>\n                  Female\n              </Label>\n          </FormGroup>\n          </FormGroup>\n          <Button type=\"submit\" onClick={this.handleSubmit}>\n            Register\n          </Button>\n          <Button  onClick={() => {this.props.history.push('/')}}>\n            Cancell\n          </Button>\n        </Form>\n      </Container>\n    );\n  }\n}\nexport default Register;\n\n{/* avelacnel radioi arjeqn el,Cancell sexmelis gnal login page*/}\n"]},"metadata":{},"sourceType":"module"}