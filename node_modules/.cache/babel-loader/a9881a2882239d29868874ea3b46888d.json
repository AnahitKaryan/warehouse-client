{"ast":null,"code":"import _defineProperty from \"/home/anahit/Desktop/warehouse-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/anahit/Desktop/warehouse-app/src/Components/Table/Table.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport MaterialTable from 'material-table';\nimport './Table.css';\n\nclass Table extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      columns: [{\n        title: 'Name',\n        field: 'name'\n      }, {\n        title: 'Type',\n        field: 'type'\n      }, {\n        title: 'Constly',\n        field: 'constly'\n      }, {\n        title: 'Price',\n        field: 'price'\n      }, {\n        title: 'Quantity',\n        field: 'quantity'\n      }, {\n        title: 'Status',\n        field: 'status'\n      }, {\n        title: 'Date of import',\n        field: 'date1',\n        type: 'date',\n        customSort: (a, b) => new Date(a.date) - new Date(b.date),\n        render: data => this.toDate(data.date)\n      }, {\n        title: 'Date of export',\n        field: 'date2',\n        type: 'date',\n        customSort: (a, b) => new Date(a.date) - new Date(b.date),\n        render: data => this.toDate(data.date)\n      }, {\n        title: 'Priority',\n        field: 'priority',\n        lookup: {\n          1: '1',\n          2: '2',\n          3: '3',\n          4: '4',\n          5: '5'\n        },\n        customSort: (a, b) => a.priority - b.priority\n      }],\n      data: [{\n        name: 'Milk',\n        type: 'Dairy',\n        consily: 250,\n        price: 280,\n        quantity: 10,\n        status: 'Is useful',\n        date1: 'Sep 19 2010',\n        date2: 'Sep 30 2010',\n        priority: 1\n      }, {\n        name: 'Coca-cola',\n        type: 'Drink',\n        consily: 500,\n        price: 550,\n        quantity: 15,\n        status: 'Is useful',\n        date1: 'Sep 19 2010',\n        date2: 'Sep 30 2010',\n        priority: 3\n      }]\n    };\n\n    this.toDate = string => new Date(string).toDateString();\n\n    this.priorities = {\n      1: '1',\n      2: '2',\n      3: '3',\n      4: '4',\n      5: '5'\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(MaterialTable, {\n      title: \"Table\",\n      columns: this.state.columns,\n      data: this.state.data,\n      sorting: true,\n      editable: {\n        onRowAdd: newData => new Promise(resolve => {\n          setTimeout(() => {\n            resolve();\n            const data = [...this.state.data];\n            data.push(newData);\n            this.setState(_objectSpread({}, this.state, {\n              data\n            }));\n          }, 600);\n        }),\n        onRowUpdate: (newData, oldData) => new Promise(resolve => {\n          setTimeout(() => {\n            resolve();\n            const data = [...this.state.data];\n            data[data.indexOf(oldData)] = newData;\n            this.setState(_objectSpread({}, this.state, {\n              data\n            }));\n          }, 600);\n        }),\n        onRowDelete: oldData => new Promise(resolve => {\n          setTimeout(() => {\n            resolve();\n            const data = [...this.state.data];\n            data.splice(data.indexOf(oldData), 1);\n            this.setState(_objectSpread({}, this.state, {\n              data\n            }));\n          }, 600);\n        })\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Table;","map":{"version":3,"sources":["/home/anahit/Desktop/warehouse-app/src/Components/Table/Table.jsx"],"names":["React","Component","MaterialTable","Table","state","columns","title","field","type","customSort","a","b","Date","date","render","data","toDate","lookup","priority","name","consily","price","quantity","status","date1","date2","string","toDateString","priorities","onRowAdd","newData","Promise","resolve","setTimeout","push","setState","onRowUpdate","oldData","indexOf","onRowDelete","splice"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport MaterialTable from 'material-table';\nimport './Table.css';\n\nclass Table extends Component {\n    state = {\n        columns: [\n            {\n                title: 'Name',\n                field: 'name'\n            }, \n            {\n                title: 'Type',\n                field: 'type'\n            },\n            {\n                title: 'Constly',\n                field: 'constly'\n            },\n            {\n                title: 'Price',\n                field: 'price'\n            },\n            {\n                title: 'Quantity',\n                field: 'quantity'\n            },\n            {\n                title: 'Status',\n                field: 'status'\n            },\n\n            {\n                title: 'Date of import',\n                field: 'date1',\n                type: 'date',\n                customSort: (a, b) => new Date(a.date) - new Date(b.date),\n                render: (data) => this.toDate(data.date)\n            },\n            {\n                title: 'Date of export',\n                field: 'date2',\n                type: 'date',\n                customSort: (a, b) => new Date(a.date) - new Date(b.date),\n                render: (data) => this.toDate(data.date)\n            },\n            {\n                title: 'Priority',\n                field: 'priority',\n                lookup: {\n                    1: '1',\n                    2: '2',\n                    3: '3',\n                    4: '4',\n                    5: '5'\n            },\n            customSort: (a, b) => a.priority - b.priority\n          }\n        ],\n        data: [\n            {\n                name: 'Milk',\n                type: 'Dairy',\n                consily: 250,\n                price: 280,\n                quantity: 10,\n                status: 'Is useful',\n                date1: 'Sep 19 2010',\n                date2: 'Sep 30 2010',\n                priority: 1\n            }, \n            {\n                name: 'Coca-cola',\n                type: 'Drink',\n                consily: 500,\n                price: 550,\n                quantity: 15,\n                status: 'Is useful',\n                date1: 'Sep 19 2010',\n                date2: 'Sep 30 2010',\n                priority: 3\n            }\n        ]\n    };\n\n    toDate = string => new Date(string).toDateString()\n\n    priorities = {\n        1: '1',\n        2: '2',\n        3: '3',\n        4: '4',\n        5: '5'\n    }\n\n    render() {\n        return (\n            <div id=\"table\">\n                <MaterialTable\n                    title=\"Table\"\n                    columns={this.state.columns}\n                    data={this.state.data}\n                    sorting\n                    editable={{\n                    onRowAdd: newData => new Promise(resolve => {\n                        setTimeout(() => {\n                            resolve();\n                            const data = [...this.state.data];\n                            data.push(newData);\n                            this.setState({\n                              ...this.state,\n                              data\n                            });\n                        }, 600);\n                    }),\n                    onRowUpdate: (newData, oldData) => new Promise(resolve => {\n                        setTimeout(() => {\n                            resolve();\n                            const data = [...this.state.data];\n                            data[data.indexOf(oldData)] = newData;\n                            this.setState({\n                                ...this.state,\n                                 data\n                            });\n                        }, 600);\n                    }),\n                    onRowDelete: oldData => new Promise(resolve => {\n                        setTimeout(() => {\n                            resolve();\n                            const data = [...this.state.data];\n                            data.splice(data.indexOf(oldData), 1);\n                            this.setState({\n                                 ...this.state,\n                                 data\n                            });\n                        }, 600);\n                    })\n                }}/>\n            </div>\n        );\n    }\n}\n\nexport default Table;"]},"metadata":{},"sourceType":"module"}