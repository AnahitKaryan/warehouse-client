{"ast":null,"code":"var _jsxFileName = \"/home/anahit/Desktop/warehouse-app/src/Components/Register.jsx\";\nimport React, { Component } from 'react';\nimport { Container, Col, Row, Form, FormGroup, Label, Input, Button } from 'reactstrap';\n\nclass Register extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: '',\n      surname: '',\n      birthdate: '',\n      gemus: 'female',\n      email: '',\n      password: '',\n      errors: {\n        name: '',\n        surname: '',\n        birthdate: '',\n        gemus: '',\n        email: '',\n        password: ''\n      },\n      valid: false\n    };\n\n    this.validateForm = errors => {\n      let valid = true;\n      Object.values(errors).forEach(val => val.length > 0 && (valid = false));\n      return valid;\n    };\n\n    this.checkValidation = event => {\n      const _event$target = event.target,\n            name = _event$target.name,\n            value = _event$target.value;\n      let errors = this.state.errors;\n      const validEmailRegex = RegExp(/^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i);\n\n      switch (name) {\n        case 'name':\n          let valid = value.length < 1 || value[0] >= 'A' && value[0] <= 'Z';\n          errors.name = !valid ? 'The name must contain at least one character and begin with a capital letter!' : '';\n          break;\n\n        case 'surname':\n          let validSurname = value.length < 1 || value[0] >= 'A' && value[0] <= 'Z';\n          errors.surname = !validSurname ? 'The surname must contain at least one character and begin with a capital letter!' : '';\n          break;\n\n        case 'birthdate':\n          errors.birthdate = value ? '' : 'Birthdate is requared value!';\n          break;\n\n        case 'gemus':\n          errors.gemus = value ? '' : 'Gemus is requared value!';\n          break;\n\n        case 'email':\n          errors.email = validEmailRegex.test(value) ? '' : 'Email is not valid!';\n          break;\n\n        case 'password':\n          errors.password = value.length < 5 ? 'Password must be 5 characters long!' : '';\n          break;\n\n        default:\n          break;\n      }\n\n      this.setState({\n        errors,\n        [name]: value\n      }, () => {\n        console.log(errors);\n      });\n      this.validateForm(this.state.errors);\n    };\n\n    this.inputsChange = e => {\n      const name = e.target.name;\n      const value = e.target.value;\n      console.log('kanchvel e inoputChange' + name + value);\n\n      switch (name) {\n        case 'email':\n          this.setState({\n            email: value\n          });\n          break;\n\n        case 'password':\n          this.setState({\n            password: value\n          });\n          break;\n\n        case 'name':\n          this.setState({\n            name: value\n          });\n          break;\n\n        case 'surname':\n          this.setState({\n            surname: value\n          });\n          break;\n\n        case 'birthdate':\n          this.setState({\n            birthdate: value\n          });\n          break;\n\n        default:\n          break;\n      }\n\n      this.checkValidation(e);\n\n      if (!this.validateForm(this.state.errors)) {\n        this.setState({\n          valid: false\n        });\n      } else {\n        this.setState({\n          valid: true\n        });\n      }\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault(); // const newUser = Object.assign(this.state);\n\n      if (this.validateForm(this.state.errors)) {\n        console.info('Valid Form');\n        const newUser = {\n          \"name\": this.state.name,\n          \"surname\": this.state.surname,\n          \"birthdate\": this.state.birthdate,\n          \"gemus\": this.state.gemus,\n          \"email\": this.state.email,\n          \"password\": this.state.password\n        };\n        fetch('http://localhost:8081/signup', {\n          method: 'POST',\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(newUser)\n        }).then(res => {\n          if (res.status !== 200) {\n            if (res.status == 400) {\n              console.log('0000000000000000: ' + res.status);\n              alert('There is already a user with that password');\n              return;\n            }\n\n            console.log('Looks like there was a problem. Status Code: ' + res.status);\n            return;\n          }\n\n          this.props.history.push('/');\n        }).catch(function (err) {\n          console.log('Fetch Error :-S', err);\n        });\n      } else {\n        console.error('Invalid Form');\n      }\n    };\n  }\n\n  render() {\n    const errors = this.state.errors;\n    return React.createElement(Container, {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, \"Register\"), React.createElement(Form, {\n      className: \"form\",\n      noValidate: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \"Email\"), React.createElement(Input, {\n      placeholder: \"Enter email\",\n      autoCapitalize: false,\n      name: \"email\",\n      onChange: this.inputsChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }), errors.email.length > 0 && React.createElement(\"span\", {\n      className: \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, errors.email)), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"examplePassword\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, \"Password\"), React.createElement(Input, {\n      type: \"password\",\n      placeholder: \"Enter password\",\n      name: \"password\",\n      onChange: this.inputsChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }), errors.password.length > 0 && React.createElement(\"span\", {\n      className: \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, errors.password)), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, \"Name\"), React.createElement(Input, {\n      placeholder: \"Enter name\",\n      autoCapitalize: false,\n      name: \"name\",\n      onChange: this.inputsChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }), errors.name.length > 0 && React.createElement(\"span\", {\n      className: \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, errors.name)), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, \"Surname\"), React.createElement(Input, {\n      type: \"text\",\n      placeholder: \"Enter surname\",\n      autoCapitalize: false,\n      name: \"surname\",\n      onChange: this.inputsChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }), errors.surname.length > 0 && React.createElement(\"span\", {\n      className: \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, errors.surname)), React.createElement(Row, {\n      form: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, React.createElement(\"legend\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, \"Birthday\"), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: \"date\",\n      name: \"birthdate\",\n      id: \"exampleDate\",\n      onChange: this.inputsChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }), errors.birthdate.length > 0 && React.createElement(\"span\", {\n      className: \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, errors.birthdate)))), React.createElement(FormGroup, {\n      tag: \"fieldset\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, React.createElement(\"legend\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, \"Gemus\"), React.createElement(FormGroup, {\n      check: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, React.createElement(Label, {\n      check: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: \"radio\",\n      name: \"radio\",\n      value: \"male\",\n      checked: this.state.gemus === 'male',\n      onChange: e => this.setState({\n        gemus: e.target.value\n      }),\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }), \"Male\")), React.createElement(FormGroup, {\n      check: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, React.createElement(Label, {\n      check: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: \"radio\",\n      name: \"radio\",\n      value: \"female\",\n      checked: this.state.gemus === 'female',\n      onChange: e => this.setState({\n        gemus: e.target.value\n      }),\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }), \"Female\")), errors.gemus.length > 0 && React.createElement(\"span\", {\n      className: \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, errors.gemus)), React.createElement(Button, {\n      type: \"submit\",\n      disabled: !this.state.valid,\n      onClick: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, \"Register\"), React.createElement(Button, {\n      onClick: () => {\n        this.props.history.push('/');\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, \"Cancell\")));\n  }\n\n}\n\nexport default Register;","map":{"version":3,"sources":["/home/anahit/Desktop/warehouse-app/src/Components/Register.jsx"],"names":["React","Component","Container","Col","Row","Form","FormGroup","Label","Input","Button","Register","state","name","surname","birthdate","gemus","email","password","errors","valid","validateForm","Object","values","forEach","val","length","checkValidation","event","target","value","validEmailRegex","RegExp","validSurname","test","setState","console","log","inputsChange","e","handleSubmit","preventDefault","info","newUser","fetch","method","headers","body","JSON","stringify","then","res","status","alert","props","history","push","catch","err","error","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n    Container, Col, Row, Form,\n    FormGroup, Label, Input,\n    Button,\n} from 'reactstrap';\n\n\nclass Register extends Component {\n    state = {\n        name: '',\n        surname: '',\n        birthdate: '',\n        gemus: 'female',\n        email: '',\n        password: '',\n        errors: {\n            name: '',\n            surname: '',\n            birthdate: '',\n            gemus: '',\n            email: '',\n            password: ''\n        },\n        valid: false\n    }\n\n    validateForm = (errors) => {\n        let valid = true;\n        Object.values(errors).forEach(\n            (val) => val.length > 0 && (valid = false)\n        );\n        return valid;\n    }\n\n\n    checkValidation = (event) => {\n        const { name, value } = event.target;\n        let errors = this.state.errors;\n        const validEmailRegex =  RegExp(/^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i);\n\n        switch (name) {\n            case 'name': \n                let valid = value.length < 1 || (value[0] >= 'A' && value[0] <= 'Z');\n                errors.name = \n                !valid ? 'The name must contain at least one character and begin with a capital letter!': '';\n                break;\n            case 'surname': \n                let validSurname = value.length < 1 || (value[0] >= 'A' && value[0] <= 'Z');\n                errors.surname = \n                !validSurname ? 'The surname must contain at least one character and begin with a capital letter!': '';\n                break;\n            case 'birthdate': \n                errors.birthdate = value ? '' : 'Birthdate is requared value!';\n                break;\n            case 'gemus': \n                errors.gemus = value ? '' : 'Gemus is requared value!';\n                break;\n            case 'email': \n                errors.email =\n                validEmailRegex.test(value) ? '': 'Email is not valid!';\n                break;\n            case 'password': \n                errors.password = \n                value.length < 5 ? 'Password must be 5 characters long!' : '';\n                break;\n            default:\n                break;\n        }\n\n        this.setState({errors, [name]: value}, ()=> {\n            console.log(errors)\n        })\n        this.validateForm(this.state.errors);\n    }\n\n    inputsChange = (e) => {\n        const name = e.target.name;\n        const value = e.target.value;\n        console.log('kanchvel e inoputChange' + name + value)\n        switch(name) {\n            case 'email':\n                this.setState({email: value});\n                break;\n            case 'password':\n                this.setState({password: value});\n                break;\n            case 'name':\n                this.setState({name: value});\n                break;\n            case 'surname':\n                this.setState({surname: value});\n                break;\n            case 'birthdate':\n                this.setState({birthdate: value});\n                break;\n            default:\n                break;\n        }\n        this.checkValidation(e);\n        if(!this.validateForm(this.state.errors)){\n            this.setState({valid: false});\n        } else {\n            this.setState({valid: true});\n        }\n    }\n    handleSubmit = (e) => {\n        e.preventDefault();\n        // const newUser = Object.assign(this.state);\n        if(this.validateForm(this.state.errors)) {\n            console.info('Valid Form')\n            const newUser = {\n                \"name\": this.state.name,\n                \"surname\": this.state.surname,\n                \"birthdate\": this.state.birthdate,\n                \"gemus\": this.state.gemus,\n                \"email\": this.state.email,\n                \"password\": this.state.password       \n            }\n            fetch('http://localhost:8081/signup', {\n                method: 'POST',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json',\n                },\n                body:  JSON.stringify( newUser)\n            }).then((res) =>  {\n                if (res.status !== 200) { \n                    if(res.status == 400) {\n                     console.log('0000000000000000: ' +  res.status);  \n                        alert('There is already a user with that password');\n                        return;\n                    }\n                    console.log('Looks like there was a problem. Status Code: ' +  res.status);  \n                    return;  \n                }\n                this.props.history.push('/')\n            }).catch(function(err) {  \n                console.log('Fetch Error :-S', err);  \n            });\n        } else {\n            console.error('Invalid Form')\n        }                  \n    }\n\n    render() {\n        const {errors} = this.state;\n        return (\n            <Container className=\"App\">\n                <h2>Register</h2>\n                <Form className=\"form\" noValidate>\n                    <FormGroup>\n                        <Label>Email</Label>\n                         <Input\n                            placeholder=\"Enter email\"\n                            autoCapitalize={false}\n                            name=\"email\"\n                            onChange={this.inputsChange}\n                            required\n                          />\n                        {errors.email.length > 0 && \n                        <span className='error'>{errors.email}</span>}\n                    </FormGroup>\n                    <FormGroup>\n                        <Label for=\"examplePassword\">Password</Label>\n                         <Input\n                            type=\"password\"\n                            placeholder=\"Enter password\"\n                            name=\"password\"\n                            onChange={this.inputsChange}\n                            required\n                        />\n                        {errors.password.length > 0 && \n                        <span className='error'>{errors.password}</span>}\n                    </FormGroup>\n                    <FormGroup>\n                        <Label>Name</Label>\n                        <Input\n                            placeholder=\"Enter name\"\n                            autoCapitalize={false}\n                            name=\"name\"\n                            onChange={this.inputsChange}\n                            required\n                         />\n                        {errors.name.length > 0 && \n                         <span className='error'>{errors.name}</span>}\n                    </FormGroup>\n                    <FormGroup>\n                        <Label>Surname</Label>\n                        <Input\n                            type=\"text\"\n                            placeholder=\"Enter surname\"\n                            autoCapitalize={false}\n                            name=\"surname\"\n                            onChange={this.inputsChange}\n                            required\n                        />\n                        {errors.surname.length > 0 && \n                        <span className='error'>{errors.surname}</span>}\n                    </FormGroup>\n                    <Row form>\n                        <legend>Birthday</legend>\n                        <Col>\n                            <FormGroup>\n                                <Input\n                                   type=\"date\"\n                                   name=\"birthdate\"\n                                   id=\"exampleDate\"\n                                   onChange={this.inputsChange}\n                                />\n                                {errors.birthdate.length > 0 && \n                                <span className='error'>{errors.birthdate}</span>}\n                            </FormGroup>\n                        </Col>\n                    </Row>\n                    <FormGroup tag=\"fieldset\">\n                        <legend>Gemus</legend>\n                        <FormGroup check>\n                            <Label check>\n                                <Input type=\"radio\" name=\"radio\" value='male'\n                                    checked={this.state.gemus === 'male'} onChange={(e) => this.setState({ gemus: e.target.value })} required />\n                                    Male\n                            </Label>\n                        </FormGroup>\n                        <FormGroup check>\n                            <Label check>\n                                <Input type=\"radio\" name=\"radio\" value='female'\n                                    checked={this.state.gemus === 'female'} onChange={(e) => this.setState({ gemus: e.target.value })} required/>\n                                    Female\n                            </Label>\n                        </FormGroup>\n                        {errors.gemus.length > 0 && \n                        <span className='error'>{errors.gemus}</span>}\n                    </FormGroup>\n                    <Button type=\"submit\" disabled={!this.state.valid} onClick={this.handleSubmit}>\n                        Register\n                    </Button>\n                    <Button  onClick={() => {this.props.history.push('/')}}>\n                        Cancell\n                    </Button>\n                </Form>\n            </Container>\n        );\n    }\n}\nexport default Register;\n\n"]},"metadata":{},"sourceType":"module"}